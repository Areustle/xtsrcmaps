#define DOCTEST_CONFIG_IMPLEMENTATION_IN_DLL
#include "doctest/doctest.h"

#include <fstream>

#include "xtsrcmaps/config.hxx"
#include "xtsrcmaps/fitsfuncs.hxx"
#include "xtsrcmaps/irf.hxx"
#include "xtsrcmaps/parse_src_mdl.hxx"
#include "xtsrcmaps/psf.hxx"
#include "xtsrcmaps/source_utils.hxx"
#include "xtsrcmaps/tensor_ops.hxx"

auto
veq(auto v1, auto v2) -> void
{
    REQUIRE(v1.size() == v2.size());
    for (size_t i = 0; i < v1.size(); ++i) REQUIRE(v1[i] == doctest::Approx(v2[i]));
}

auto
filecompDCE(mdarray3 const&    computed,
            std::string const& filebase,
            size_t const       ext0 = 401,
            size_t const       ext1 = 10,
            size_t const       ext2 = 25) -> void
{
    const size_t sz_exp = ext0 * ext1 * ext2;
    REQUIRE(computed.size() == sz_exp);
    REQUIRE(computed.extent(0) == ext0);
    REQUIRE(computed.extent(1) == ext1);
    auto expected = std::vector<double>(sz_exp);

    std::ifstream ifs("./xtsrcmaps/tests/expected/" + filebase + ".bin",
                      std::ios::in | std::ios::binary);
    ifs.read((char*)(&expected[0]), sizeof(double) * sz_exp);
    ifs.close();

    // md2comp(computed, expected);
    REQUIRE(computed.size() == expected.size());
    auto sp_b = std::experimental::mdspan(
        expected.data(), computed.extent(0), computed.extent(1), computed.extent(2));
    for (size_t i = 0; i < computed.extent(0); ++i)
        for (size_t j = 0; j < computed.extent(1); ++j)
            for (size_t k = 0; k < computed.extent(2); ++k)
                REQUIRE_MESSAGE(computed(i, j, k) == doctest::Approx(sp_b(i, j, k)),
                                i << " " << j << " "
                                  << " " << k << " " << filebase);
}

TEST_CASE("Test King")
{
    auto const cfg     = Fermi::XtCfg();
    auto const opt_psf = Fermi::load_psf(cfg.psf_name);
    REQUIRE(opt_psf);
    auto const psf         = opt_psf.value();
    auto       separations = Fermi::PSF::separations();
    REQUIRE(separations.size() == 401);
    auto expected_separations = std::vector<float> {
        0,           0.0001,      0.000103431, 0.000106979, 0.000110649, 0.000114445,
        0.000118371, 0.000122432, 0.000126633, 0.000130977, 0.00013547,  0.000140118,
        0.000144925, 0.000149897, 0.000155039, 0.000160358, 0.00016586,  0.00017155,
        0.000177435, 0.000183522, 0.000189818, 0.00019633,  0.000203066, 0.000210032,
        0.000217238, 0.000224691, 0.000232399, 0.000240372, 0.000248618, 0.000257148,
        0.000265969, 0.000275094, 0.000284532, 0.000294293, 0.000304389, 0.000314832,
        0.000325633, 0.000336804, 0.000348359, 0.00036031,  0.000372671, 0.000385456,
        0.00039868,  0.000412357, 0.000426504, 0.000441136, 0.00045627,  0.000471923,
        0.000488113, 0.000504859, 0.000522179, 0.000540093, 0.000558622, 0.000577786,
        0.000597608, 0.00061811,  0.000639316, 0.000661248, 0.000683934, 0.000707397,
        0.000731666, 0.000756767, 0.000782729, 0.000809582, 0.000837356, 0.000866083,
        0.000895796, 0.000926528, 0.000958314, 0.00099119,  0.00102519,  0.00106037,
        0.00109674,  0.00113437,  0.00117329,  0.00121354,  0.00125517,  0.00129823,
        0.00134277,  0.00138884,  0.00143648,  0.00148576,  0.00153673,  0.00158945,
        0.00164398,  0.00170038,  0.00175872,  0.00181905,  0.00188146,  0.00194601,
        0.00201277,  0.00208182,  0.00215324,  0.00222711,  0.00230352,  0.00238254,
        0.00246428,  0.00254882,  0.00263626,  0.0027267,   0.00282025,  0.002917,
        0.00301708,  0.00312058,  0.00322764,  0.00333837,  0.0034529,   0.00357136,
        0.00369388,  0.0038206,   0.00395167,  0.00408724,  0.00422746,  0.00437249,
        0.0045225,   0.00467765,  0.00483813,  0.00500411,  0.00517578,  0.00535335,
        0.005537,    0.00572696,  0.00592343,  0.00612665,  0.00633683,  0.00655423,
        0.00677908,  0.00701165,  0.0072522,   0.007501,    0.00775834,  0.0080245,
        0.00829979,  0.00858453,  0.00887904,  0.00918365,  0.00949871,  0.00982458,
        0.0101616,   0.0105102,   0.0108708,   0.0112438,   0.0116295,   0.0120285,
        0.0124411,   0.0128679,   0.0133094,   0.013766,    0.0142383,   0.0147267,
        0.015232,    0.0157545,   0.016295,    0.016854,    0.0174322,   0.0180303,
        0.0186489,   0.0192886,   0.0199504,   0.0206348,   0.0213427,   0.0220749,
        0.0228322,   0.0236155,   0.0244257,   0.0252637,   0.0261304,   0.0270268,
        0.027954,    0.0289131,   0.029905,    0.0309309,   0.031992,    0.0330896,
        0.0342248,   0.0353989,   0.0366134,   0.0378694,   0.0391686,   0.0405124,
        0.0419022,   0.0433397,   0.0448266,   0.0463644,   0.0479551,   0.0496002,
        0.0513019,   0.0530619,   0.0548823,   0.0567651,   0.0587125,   0.0607267,
        0.0628101,   0.0649649,   0.0671936,   0.0694988,   0.0718831,   0.0743492,
        0.0768999,   0.0795381,   0.0822667,   0.0850891,   0.0880082,   0.0910275,
        0.0941503,   0.0973803,   0.100721,    0.104177,    0.10775,     0.111447,
        0.11527,     0.119225,    0.123315,    0.127546,    0.131921,    0.136447,
        0.141128,    0.14597,     0.150978,    0.156157,    0.161515,    0.167056,
        0.172787,    0.178715,    0.184846,    0.191187,    0.197746,    0.20453,
        0.211547,    0.218804,    0.226311,    0.234075,    0.242105,    0.250411,
        0.259002,    0.267887,    0.277078,    0.286583,    0.296415,    0.306584,
        0.317102,    0.327981,    0.339233,    0.350871,    0.362908,    0.375358,
        0.388236,    0.401555,    0.415331,    0.429579,    0.444317,    0.45956,
        0.475326,    0.491633,    0.508499,    0.525944,    0.543988,    0.56265,
        0.581953,    0.601918,    0.622568,    0.643926,    0.666017,    0.688866,
        0.712498,    0.736942,    0.762224,    0.788374,    0.81542,     0.843394,
        0.872329,    0.902255,    0.933209,    0.965224,    0.998338,    1.03259,
        1.06801,     1.10465,     1.14255,     1.18175,     1.22229,     1.26422,
        1.30759,     1.35245,     1.39885,     1.44684,     1.49648,     1.54782,
        1.60092,     1.65584,     1.71265,     1.7714,      1.83217,     1.89503,
        1.96004,     2.02728,     2.09683,     2.16877,     2.24317,     2.32013,
        2.39972,     2.48205,     2.5672,      2.65527,     2.74637,     2.84059,
        2.93804,     3.03883,     3.14309,     3.25091,     3.36244,     3.4778,
        3.59711,     3.72051,     3.84815,     3.98017,     4.11672,     4.25795,
        4.40403,     4.55511,     4.71138,     4.87302,     5.04019,     5.21311,
        5.39195,     5.57693,     5.76826,     5.96615,     6.17083,     6.38253,
        6.60149,     6.82797,     7.06222,     7.3045,      7.55509,     7.81428,
        8.08236,     8.35964,     8.64644,     8.94307,     9.24988,     9.56721,
        9.89543,     10.2349,     10.586,      10.9492,     11.3248,     11.7134,
        12.1152,     12.5308,     12.9607,     13.4054,     13.8653,     14.3409,
        14.8329,     15.3418,     15.8681,     16.4125,     16.9756,     17.558,
        18.1603,     18.7833,     19.4277,     20.0942,     20.7836,     21.4966,
        22.2341,     22.9969,     23.7858,     24.6018,     25.4459,     26.3188,
        27.2217,     28.1556,     29.1215,     30.1206,     31.154,      32.2227,
        33.3282,     34.4716,     35.6542,     36.8774,     38.1425,     39.4511,
        40.8045,     42.2044,     43.6523,     45.1498,     46.6988,     48.3009,
        49.9579,     51.6718,     53.4445,     55.278,      57.1744,     59.1359,
        61.1647,     63.263,      65.4334,     67.6782,     70
    };
    SUBCASE("Separations!") { veq(separations, expected_separations); }

    // Entries 2,3 no longer correct due to scaleFactor scaling.
    // auto expected_rpsf = std::vector<float> {
    //     0.182444,    0.951492,    0.1,      1.56686,  1.001,   20,
    //     0.369497,    0.951492,    0.1,      1.56686,  1.001,   20,
    //     0.65483,     0.755518,    0.100001, 1.96079,  1.001,   11.828,
    //     1.11258,     1,           1.74016,  1.85589,  1.04081, 20,
    //     13.7056,     0.27293,     1.89354,  1.63184,  1.00125, 3.72934,
    //     30.2601,     0.483764,    1.31308,  1.30039,  1.001,   2.78281,
    //     69.8651,     0.103187,    0.785169, 1.62069,  2.06973, 4.25621,
    //     202.598,     0.197366,    0.628939, 1.37218,  2.55299, 2.64405,
    //     695.939,     0.054274,    0.616182, 1.82103,  2.34379, 2.89785,
    //     709.116,     0.817127,    0.604087, 1.11001,  20,      2.13353,
    //     5428.55,     0.0242779,   0.577856, 2.12671,  1.7246,  6.12,
    //     13277.4,     0.0266284,   0.562291, 2.15281,  1.83699, 3.38351,
    //     35718.8,     0.0132902,   0.520319, 2.8308,   1.83472, 2.89557,
    //     43874.1,     0.155671,    0.514539, 1.55494,  7.57138, 1.99484,
    //     188427,      0.00159132,  0.476725, 4.7626,   1.57961, 9.41517,
    //     358682,      0.0100369,   0.383155, 2.27465,  1.73159, 2.33446,
    //     533869,      0.0021096,   0.357483, 4.00594,  1.59385, 20,
    //     629764,      0.00187875,  0.346283, 3.97267,  1.62384, 20,
    //     865724,      0.00709127,  0.282081, 2.16822,  1.63212, 3.13418,
    //     1.04519e+06, 0.00429308,  0.268154, 2.31681,  1.61133, 4.02128,
    //     1.29991e+06, 0.00835645,  0.237909, 1.55505,  1.76131, 2.39403,
    //     730602,      0.333412,    0.209962, 0.5279,   5.452,   1.66947,
    //     1.36944e+06, 0.00900577,  0.219878, 1.66021,  2.18033, 1.63559,
    //     1.06687e+06, 1,           0.109738, 0.288507, 7.0148,  1.26119,
    //     1.06714e+06, 1,           0.109738, 0.288507, 7.0148,  1.26119,
    //     0.182444,    0.951492,    0.1,      1.56686,  1.001,   20,
    //     0.369497,    0.951492,    0.1,      1.56686,  1.001,   20,
    //     0.65483,     0.755518,    0.100001, 1.96079,  1.001,   11.828,
    //     1.11258,     1,           1.74016,  1.85589,  1.04081, 20,
    //     13.7056,     0.27293,     1.89354,  1.63184,  1.00125, 3.72934,
    //     30.2601,     0.483764,    1.31308,  1.30039,  1.001,   2.78281,
    //     69.8651,     0.103187,    0.785169, 1.62069,  2.06973, 4.25621,
    //     202.598,     0.197366,    0.628939, 1.37218,  2.55299, 2.64405,
    //     695.939,     0.054274,    0.616182, 1.82103,  2.34379, 2.89785,
    //     709.116,     0.817127,    0.604087, 1.11001,  20,      2.13353,
    //     5428.55,     0.0242779,   0.577856, 2.12671,  1.7246,  6.12,
    //     13277.4,     0.0266284,   0.562291, 2.15281,  1.83699, 3.38351,
    //     35718.8,     0.0132902,   0.520319, 2.8308,   1.83472, 2.89557,
    //     43874.1,     0.155671,    0.514539, 1.55494,  7.57138, 1.99484,
    //     188427,      0.00159132,  0.476725, 4.7626,   1.57961, 9.41517,
    //     358682,      0.0100369,   0.383155, 2.27465,  1.73159, 2.33446,
    //     533869,      0.0021096,   0.357483, 4.00594,  1.59385, 20,
    //     629764,      0.00187875,  0.346283, 3.97267,  1.62384, 20,
    //     865724,      0.00709127,  0.282081, 2.16822,  1.63212, 3.13418,
    //     1.04519e+06, 0.00429308,  0.268154, 2.31681,  1.61133, 4.02128,
    //     1.29991e+06, 0.00835645,  0.237909, 1.55505,  1.76131, 2.39403,
    //     730602,      0.333412,    0.209962, 0.5279,   5.452,   1.66947,
    //     1.36944e+06, 0.00900577,  0.219878, 1.66021,  2.18033, 1.63559,
    //     1.06687e+06, 1,           0.109738, 0.288507, 7.0148,  1.26119,
    //     1.06714e+06, 1,           0.109738, 0.288507, 7.0148,  1.26119,
    //     0.186439,    0.942518,    0.100875, 1.35112,  1.001,   20,
    //     0.452474,    0.942518,    0.100875, 1.35112,  1.001,   20,
    //     1.37573,     0.663167,    1.44293,  1.35838,  1.00318, 8.71354,
    //     10.6579,     0.209344,    1.14195,  1.3176,   1.00377, 9.99841,
    //     4.9614,      1,           0.960193, 1.04437,  2.41834, 5.81539,
    //     45.5553,     0.0391003,   0.675013, 1.50571,  2.42835, 20,
    //     123.484,     0.230291,    0.528159, 0.983152, 2.63223, 2.95324,
    //     390.775,     0.0888525,   0.524627, 1.17413,  2.59041, 3.04404,
    //     1081.82,     0.0642061,   0.5021,   1.29649,  2.54231, 2.91784,
    //     3215.36,     0.0367843,   0.477015, 1.42744,  2.19709, 2.82703,
    //     9753.84,     0.0394221,   0.418951, 1.3452,   2.15649, 2.59568,
    //     28022.8,     0.017374,    0.398002, 1.69407,  2.08145, 2.53904,
    //     57289.6,     0.0212128,   0.401854, 1.86398,  2.53727, 2.63925,
    //     167376,      0.00280943,  0.37565,  3.09701,  1.95175, 4.35559,
    //     317931,      0.00257611,  0.361233, 3.1495,   2.00834, 4.01998,
    //     573748,      0.00307729,  0.315808, 2.822,    1.9182,  3.94342,
    //     928048,      0.00320888,  0.273645, 2.37489,  1.76447, 3.35235,
    //     1.15231e+06, 0.00690358,  0.246648, 1.73992,  1.76358, 2.73964,
    //     1.06842e+06, 0.0102618,   0.249351, 1.68997,  1.87459, 2.93959,
    //     1.27549e+06, 0.018367,    0.221989, 1.24617,  1.9157,  2.42857,
    //     1.28329e+06, 0.0336882,   0.213556, 0.977607, 2.31343, 2.21993,
    //     1.25627e+06, 0.317678,    0.16122,  0.411061, 5.44295, 1.74311,
    //     1.25661e+06, 0.163968,    0.194543, 0.505381, 6.33662, 1.81473,
    //     1.24436e+06, 0.994099,    0.142674, 0.246076, 20,      1.54476,
    //     1.24468e+06, 0.994099,    0.142674, 0.246076, 20,      1.54476,
    //     0.203946,    1,           0.1,      0.986004, 1.001,   6.78037,
    //     0.73219,     1,           0.1,      0.986004, 1.001,   6.78037,
    //     0.835833,    1,           1.00247,  0.985559, 3.65828, 20,
    //     5.4902,      0.158047,    0.739125, 1.07691,  2.77679, 18.5308,
    //     12.7642,     0.955133,    0.483628, 0.753439, 2.42454, 2.95166,
    //     68.1008,     0.103741,    0.518325, 0.955004, 2.49594, 4.3886,
    //     165.481,     0.203103,    0.472638, 0.861862, 2.7368,  3.14841,
    //     502.989,     0.0829199,   0.46537,  1.05575,  2.65772, 3.22225,
    //     1473.09,     0.075524,    0.423809, 1.05954,  2.5536,  2.89646,
    //     4860.4,      0.0529081,   0.375758, 1.05527,  2.27243, 2.6374,
    //     14700.2,     0.0220506,   0.359218, 1.25546,  2.25934, 2.6845,
    //     36231.5,     0.0141767,   0.35753,  1.53154,  2.37666, 2.63697,
    //     72706.4,     0.0166482,   0.378852, 1.58437,  2.94684, 2.54516,
    //     179933,      0.00347992,  0.366857, 2.49984,  2.41917, 3.68321,
    //     382833,      0.00234644,  0.337453, 2.58786,  2.20315, 3.12583,
    //     765335,      0.00203588,  0.286479, 2.33174,  1.94385, 3.19364,
    //     1.09846e+06, 0.00665969,  0.248795, 1.58148,  1.97405, 2.64928,
    //     1.19925e+06, 0.0304756,   0.219388, 0.998819, 2.31453, 2.23178,
    //     1.25301e+06, 0.021087,    0.221941, 1.16761,  2.03718, 2.49745,
    //     1.2708e+06,  0.0320305,   0.211312, 1.02171,  2.0996,  2.45396,
    //     1.27665e+06, 0.0450735,   0.206539, 0.888076, 2.53992, 2.34987,
    //     1.26455e+06, 0.151944,    0.181124, 0.552266, 4.72225, 2.02433,
    //     1.25785e+06, 0.192931,    0.1853,   0.484622, 8.63934, 1.99643,
    //     1.25497e+06, 0.269764,    0.185648, 0.410219, 20,      1.88411,
    //     1.25529e+06, 0.269764,    0.185648, 0.410219, 20,      1.88411,
    //     0.103024,    1,           0.931089, 0.647115, 6.58476, 20,
    //     0.529893,    1,           0.931089, 0.647115, 6.58476, 20,
    //     2.70036,     0.00935781,  0.749942, 1.97444,  5.76082, 20,
    //     6.96221,     0.436539,    0.535447, 0.804741, 3.70298, 3.68674,
    //     30.1663,     0.0396685,   0.535171, 1.01645,  2.85843, 5.03343,
    //     84.8387,     0.0753053,   0.481478, 0.889259, 2.69026, 4.00302,
    //     192.808,     0.252731,    0.410475, 0.777352, 2.82993, 3.1745,
    //     599.808,     0.113213,    0.404286, 0.919254, 2.72129, 3.14318,
    //     1877.12,     0.069639,    0.376447, 0.971881, 2.57,    2.93507,
    //     6252.67,     0.0453707,   0.337138, 0.960888, 2.34347, 2.67652,
    //     16726.2,     0.0231018,   0.335712, 1.16309,  2.44773, 2.77712,
    //     38222.2,     0.0143852,   0.35326,  1.39262,  2.7279,  2.6947,
    //     76830.7,     0.011476,    0.382211, 1.59748,  3.14935, 2.72089,
    //     175527,      0.00662772,  0.372422, 1.80346,  2.86,    2.62893,
    //     365879,      0.00712959,  0.341217, 1.63951,  2.64978, 2.47856,
    //     769891,      0.00573796,  0.280505, 1.55672,  2.2353,  2.50132,
    //     1.09354e+06, 0.0142114,   0.243459, 1.17548,  2.31159, 2.38129,
    //     1.19171e+06, 0.0334576,   0.222539, 0.939129, 2.46486, 2.24163,
    //     1.24276e+06, 0.0418089,   0.208091, 0.919486, 2.32883, 2.38122,
    //     1.26173e+06, 0.0473612,   0.201448, 0.896554, 2.18945, 2.4079,
    //     1.26883e+06, 0.0523817,   0.198787, 0.864773, 2.31794, 2.44873,
    //     1.26491e+06, 0.0838851,   0.188851, 0.719792, 3.10885, 2.37429,
    //     1.2656e+06,  0.117405,    0.188125, 0.610573, 5.26168, 2.26376,
    //     1.26653e+06, 0.195975,    0.184361, 0.479949, 20,      2.08868,
    //     1.26685e+06, 0.195975,    0.184361, 0.479949, 20,      2.08868,
    //     0.198344,    0.0926159,   0.616383, 1.1515,   9.66656, 20,
    //     1.31753,     0.0926159,   0.616383, 1.1515,   9.66656, 20,
    //     2.48492,     0.974591,    0.453623, 0.669671, 3.35386, 4.1578,
    //     7.24517,     0.99995,     0.352909, 0.648742, 2.56223, 3.9726,
    //     30.2742,     0.257944,    0.440686, 0.714459, 2.75896, 3.86339,
    //     84.5655,     0.194092,    0.427014, 0.75233,  2.96032, 3.46022,
    //     231.502,     0.205298,    0.386373, 0.758897, 2.90585, 3.17604,
    //     716.265,     0.108147,    0.371962, 0.852682, 2.72486, 3.06682,
    //     2328.21,     0.0620053,   0.342367, 0.898647, 2.52994, 2.90457,
    //     7062.24,     0.0421745,   0.319712, 0.917541, 2.48438, 2.78253,
    //     17436.4,     0.0269909,   0.328318, 1.05949,  2.78648, 2.66671,
    //     36058.8,     0.0281919,   0.356621, 1.10901,  3.44763, 2.53162,
    //     82319.8,     0.0103009,   0.37506,  1.4945,   3.17803, 2.64858,
    //     164438,      0.0187782,   0.37718,  1.23834,  3.52509, 2.32584,
    //     347073,      0.0139205,   0.346599, 1.28006,  3.14795, 2.35697,
    //     718018,      0.0105864,   0.287559, 1.25173,  2.62007, 2.37355,
    //     1.08507e+06, 0.021924,    0.24146,  0.983847, 2.56735, 2.28578,
    //     1.18327e+06, 0.0561013,   0.215309, 0.769713, 2.95332, 2.15406,
    //     1.23399e+06, 0.0538532,   0.205007, 0.830906, 2.61231, 2.33086,
    //     1.2574e+06,  0.0541036,   0.19866,  0.853967, 2.38224, 2.45234,
    //     1.26506e+06, 0.058925,    0.194482, 0.835169, 2.42353, 2.53649,
    //     1.26707e+06, 0.0786966,   0.186308, 0.750114, 2.94226, 2.48691,
    //     1.26778e+06, 0.0864861,   0.187735, 0.711472, 4.00265, 2.50232,
    //     1.26743e+06, 0.107814,    0.190021, 0.631297, 6.75367, 2.3648,
    //     1.26776e+06, 0.107814,    0.190021, 0.631297, 6.75367, 2.3648,
    //     0.15416,     1,           0.329043, 0.61438,  3.50516, 5.24287,
    //     1.33706,     1,           0.329043, 0.61438,  3.50516, 5.24287,
    //     3.07794,     0.98294,     0.386687, 0.610645, 3.43191, 4.38288,
    //     8.19785,     0.901952,    0.389655, 0.604292, 3.09937, 3.84636,
    //     36.9859,     0.115031,    0.444463, 0.774754, 2.90864, 4.51448,
    //     90.9732,     0.210198,    0.396394, 0.737887, 3.13143, 3.50551,
    //     281.967,     0.121222,    0.377471, 0.797804, 2.86563, 3.28231,
    //     870.306,     0.0771499,   0.350363, 0.85065,  2.66105, 3.08295,
    //     2750.79,     0.0487799,   0.322079, 0.880921, 2.50218, 2.89438,
    //     8303.08,     0.0228423,   0.306847, 1.00312,  2.39456, 2.92882,
    //     17649,       0.0290723,   0.325637, 1.02237,  3.12868, 2.71961,
    //     39584.8,     0.0165293,   0.350781, 1.21468,  3.15457, 2.63088,
    //     86247.3,     0.0106792,   0.36804,  1.39462,  3.14067, 2.65069,
    //     174003,      0.0163228,   0.371075, 1.2116,   3.31808, 2.36189,
    //     327050,      0.0302011,   0.348689, 0.99846,  3.69307, 2.20602,
    //     653971,      0.0211023,   0.294303, 1.02996,  3.01017, 2.22135,
    //     1.08345e+06, 0.0276655,   0.240192, 0.89075,  2.68465, 2.2409,
    //     1.18443e+06, 0.0468731,   0.219864, 0.815562, 2.82896, 2.26742,
    //     1.23218e+06, 0.050478,    0.206649, 0.851757, 2.61185, 2.39405,
    //     1.25405e+06, 0.0502304,   0.200012, 0.88259,  2.40257, 2.53524,
    //     1.26091e+06, 0.0607263,   0.193672, 0.82841,  2.48767, 2.52573,
    //     1.26726e+06, 0.0696366,   0.18936,  0.786916, 2.68479, 2.55905,
    //     1.26923e+06, 0.0703662,   0.189637, 0.781456, 3.25907, 2.61399,
    //     1.2685e+06,  0.0902807,   0.188159, 0.694981, 4.39361, 2.54839,
    //     1.26882e+06, 0.0902807,   0.188159, 0.694981, 4.39361, 2.54839,
    //     0.16444,     0.78346,     0.357841, 0.589885, 4.74152, 6.14503,
    //     1.60424,     0.78346,     0.357841, 0.589885, 4.74152, 6.14503,
    //     3.06822,     0.984197,    0.397222, 0.60346,  3.78449, 5.27693,
    //     12.4379,     0.332046,    0.405826, 0.676899, 3.15802, 5.45063,
    //     29.8521,     0.493647,    0.369083, 0.626811, 3.30013, 3.53408,
    //     104.119,     0.20625,     0.372077, 0.692204, 3.06463, 3.29156,
    //     324.876,     0.121271,    0.349757, 0.750474, 2.83987, 3.1384,
    //     1023.13,     0.0669023,   0.327958, 0.814186, 2.60384, 2.97925,
    //     3199.86,     0.035554,    0.306093, 0.887835, 2.46503, 2.92124,
    //     8877.29,     0.0197074,   0.299493, 1.00404,  2.48188, 2.78,
    //     16189.2,     0.0441246,   0.333204, 0.924386, 3.84335, 2.6552,
    //     36742.2,     0.0250636,   0.359865, 1.08194,  3.6339,  2.51397,
    //     79249,       0.0221755,   0.377028, 1.12106,  3.63233, 2.35804,
    //     151994,      0.0419236,   0.384318, 0.94409,  4.21452, 2.17939,
    //     342175,      0.0196279,   0.346755, 1.12287,  3.45538, 2.32127,
    //     644719,      0.0219798,   0.297235, 1.00535,  3.17557, 2.21182,
    //     1.08081e+06, 0.0243806,   0.244087, 0.911573, 2.85499, 2.23677,
    //     1.17939e+06, 0.0567578,   0.220786, 0.740366, 3.46312, 2.21053,
    //     1.22923e+06, 0.0587922,   0.208951, 0.780934, 3.21627, 2.31034,
    //     1.2488e+06,  0.0650682,   0.199401, 0.781146, 3.15214, 2.39369,
    //     1.25779e+06, 0.0711091,   0.195669, 0.760192, 3.23034, 2.4639,
    //     1.26174e+06, 0.0885543,   0.190876, 0.695952, 3.7653,  2.4023,
    //     1.26194e+06, 0.0979883,   0.189289, 0.666727, 4.54327, 2.4616,
    //     1.26189e+06, 0.140608,    0.184992, 0.566982, 6.97095, 2.30956,
    //     1.26221e+06, 0.140608,    0.184992, 0.566982, 6.97095, 2.30956,
    //     0.268287,    1.53867e-06, 0.483243, 0.165184, 5.9838,  1.00109,
    //     2.73474,     1.53867e-06, 0.483243, 0.165184, 5.9838,  1.00109,
    //     3.04083,     0.999999,    0.386761, 0.608671, 4.11947, 6.44865,
    //     11.8784,     0.461479,    0.388184, 0.625954, 3.62491, 4.70351,
    //     36.9592,     0.353714,    0.362442, 0.618291, 3.35914, 3.53673,
    //     127.463,     0.153998,    0.357353, 0.655104, 2.92397, 3.04906,
    //     399.547,     0.0815801,   0.33606,  0.718102, 2.71419, 2.90594,
    //     1254.2,      0.0360947,   0.314201, 0.835523, 2.52647, 2.87013,
    //     3879.09,     0.0146344,   0.293129, 0.994751, 2.35387, 2.94977,
    //     9776.43,     0.0109876,   0.292601, 1.12358,  2.49882, 2.88584,
    //     18595.2,     0.0314747,   0.318666, 0.942128, 3.3777,  2.48141,
    //     43243.9,     0.0166011,   0.337046, 1.1343,   3.12785, 2.49293,
    //     86399.4,     0.0245065,   0.357636, 1.06977,  3.52146, 2.34495,
    //     163933,      0.0617666,   0.357873, 0.839349, 4.15625, 2.12987,
    //     347588,      0.0369071,   0.332742, 0.931317, 3.54145, 2.13734,
    //     687233,      0.0203466,   0.286279, 1.03436,  2.91534, 2.20507,
    //     1.08494e+06, 0.0196376,   0.242864, 1.02299,  2.62632, 2.32335,
    //     1.18661e+06, 0.033371,    0.224581, 0.931171, 2.76872, 2.36205,
    //     1.23384e+06, 0.0394551,   0.210879, 0.938457, 2.7683,  2.48284,
    //     1.25298e+06, 0.0443855,   0.201804, 0.93104,  2.85562, 2.59334,
    //     1.26211e+06, 0.0509989,   0.197997, 0.884577, 3.12791, 2.60803,
    //     1.26523e+06, 0.0583946,   0.194671, 0.840056, 3.68663, 2.6475,
    //     1.27321e+06, 0.0549413,   0.196735, 0.853063, 3.94988, 2.79478,
    //     1.26515e+06, 0.0885139,   0.192917, 0.688854, 6.10831, 2.47086,
    //     1.26547e+06, 0.0885139,   0.192917, 0.688854, 6.10831, 2.47086,
    //     0.268287,    1.53867e-06, 0.483243, 0.165184, 5.9838,  1.00109,
    //     2.73474,     1.53867e-06, 0.483243, 0.165184, 5.9838,  1.00109,
    //     3.04083,     0.999999,    0.386761, 0.608671, 4.11947, 6.44865,
    //     11.8784,     0.461479,    0.388184, 0.625954, 3.62491, 4.70351,
    //     36.9592,     0.353714,    0.362442, 0.618291, 3.35914, 3.53673,
    //     127.463,     0.153998,    0.357353, 0.655104, 2.92397, 3.04906,
    //     399.547,     0.0815801,   0.33606,  0.718102, 2.71419, 2.90594,
    //     1254.2,      0.0360947,   0.314201, 0.835523, 2.52647, 2.87013,
    //     3879.09,     0.0146344,   0.293129, 0.994751, 2.35387, 2.94977,
    //     9776.43,     0.0109876,   0.292601, 1.12358,  2.49882, 2.88584,
    //     18595.2,     0.0314747,   0.318666, 0.942128, 3.3777,  2.48141,
    //     43243.9,     0.0166011,   0.337046, 1.1343,   3.12785, 2.49293,
    //     86399.4,     0.0245065,   0.357636, 1.06977,  3.52146, 2.34495,
    //     163933,      0.0617666,   0.357873, 0.839349, 4.15625, 2.12987,
    //     347588,      0.0369071,   0.332742, 0.931317, 3.54145, 2.13734,
    //     687233,      0.0203466,   0.286279, 1.03436,  2.91534, 2.20507,
    //     1.08494e+06, 0.0196376,   0.242864, 1.02299,  2.62632, 2.32335,
    //     1.18661e+06, 0.033371,    0.224581, 0.931171, 2.76872, 2.36205,
    //     1.23384e+06, 0.0394551,   0.210879, 0.938457, 2.7683,  2.48284,
    //     1.25298e+06, 0.0443855,   0.201804, 0.93104,  2.85562, 2.59334,
    //     1.26211e+06, 0.0509989,   0.197997, 0.884577, 3.12791, 2.60803,
    //     1.26523e+06, 0.0583946,   0.194671, 0.840056, 3.68663, 2.6475,
    //     1.27321e+06, 0.0549413,   0.196735, 0.853063, 3.94988, 2.79478,
    //     1.26515e+06, 0.0885139,   0.192917, 0.688854, 6.10831, 2.47086,
    //     1.26547e+06, 0.0885139,   0.192917, 0.688854, 6.10831, 2.47086
    // };
    // SUBCASE("front rpsf") { veq(psf.front.rpsf.params.container(), expected_rpsf); }

    auto kings = Fermi::PSF::king(separations, psf.front);
    SUBCASE("Kings") { filecompDCE(kings, "king_front"); }
}
