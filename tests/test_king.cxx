#include <gtest/gtest.h>

#include <fstream>

#include "tests/fermi_tests.hxx"
#include "xtsrcmaps/config/config.hxx"
#include "xtsrcmaps/fits/fits.hxx"
#include "xtsrcmaps/irf/irf.hxx"
#include "xtsrcmaps/psf/psf.hxx"
#include "xtsrcmaps/source/parse_src_mdl.hxx"
#include "xtsrcmaps/source/source.hxx"
#include "xtsrcmaps/tensor/tensor.hpp"

TEST(KingTestSuite, KingFunctionality) {
    auto const cfg     = Fermi::XtCfg();
    auto const opt_psf = Fermi::load_psf(cfg.psf_file);
    ASSERT_TRUE(opt_psf);
    auto const psf = opt_psf.value();

    ASSERT_EQ(psf.front.rpsf.params.extent(0), psf.front.rpsf.cosths.size());
    ASSERT_EQ(psf.front.rpsf.params.extent(1), psf.front.rpsf.logEs.size());
    ASSERT_EQ(psf.front.rpsf.params.extent(2), 6);

    auto separations = Fermi::PSF::separations();
    ASSERT_EQ(separations.size(), 401);
    auto expected_separations = std::vector<float> {
        0,           0.0001,      0.000103431, 0.000106979, 0.000110649,
        0.000114445, 0.000118371, 0.000122432, 0.000126633, 0.000130977,
        0.00013547,  0.000140118, 0.000144925, 0.000149897, 0.000155039,
        0.000160358, 0.00016586,  0.00017155,  0.000177435, 0.000183522,
        0.000189818, 0.00019633,  0.000203066, 0.000210032, 0.000217238,
        0.000224691, 0.000232399, 0.000240372, 0.000248618, 0.000257148,
        0.000265969, 0.000275094, 0.000284532, 0.000294293, 0.000304389,
        0.000314832, 0.000325633, 0.000336804, 0.000348359, 0.00036031,
        0.000372671, 0.000385456, 0.00039868,  0.000412357, 0.000426504,
        0.000441136, 0.00045627,  0.000471923, 0.000488113, 0.000504859,
        0.000522179, 0.000540093, 0.000558622, 0.000577786, 0.000597608,
        0.00061811,  0.000639316, 0.000661248, 0.000683934, 0.000707397,
        0.000731666, 0.000756767, 0.000782729, 0.000809582, 0.000837356,
        0.000866083, 0.000895796, 0.000926528, 0.000958314, 0.00099119,
        0.00102519,  0.00106037,  0.00109674,  0.00113437,  0.00117329,
        0.00121354,  0.00125517,  0.00129823,  0.00134277,  0.00138884,
        0.00143648,  0.00148576,  0.00153673,  0.00158945,  0.00164398,
        0.00170038,  0.00175872,  0.00181905,  0.00188146,  0.00194601,
        0.00201277,  0.00208182,  0.00215324,  0.00222711,  0.00230352,
        0.00238254,  0.00246428,  0.00254882,  0.00263626,  0.0027267,
        0.00282025,  0.002917,    0.00301708,  0.00312058,  0.00322764,
        0.00333837,  0.0034529,   0.00357136,  0.00369388,  0.0038206,
        0.00395167,  0.00408724,  0.00422746,  0.00437249,  0.0045225,
        0.00467765,  0.00483813,  0.00500411,  0.00517578,  0.00535335,
        0.005537,    0.00572696,  0.00592343,  0.00612665,  0.00633683,
        0.00655423,  0.00677908,  0.00701165,  0.0072522,   0.007501,
        0.00775834,  0.0080245,   0.00829979,  0.00858453,  0.00887904,
        0.00918365,  0.00949871,  0.00982458,  0.0101616,   0.0105102,
        0.0108708,   0.0112438,   0.0116295,   0.0120285,   0.0124411,
        0.0128679,   0.0133094,   0.013766,    0.0142383,   0.0147267,
        0.015232,    0.0157545,   0.016295,    0.016854,    0.0174322,
        0.0180303,   0.0186489,   0.0192886,   0.0199504,   0.0206348,
        0.0213427,   0.0220749,   0.0228322,   0.0236155,   0.0244257,
        0.0252637,   0.0261304,   0.0270268,   0.027954,    0.0289131,
        0.029905,    0.0309309,   0.031992,    0.0330896,   0.0342248,
        0.0353989,   0.0366134,   0.0378694,   0.0391686,   0.0405124,
        0.0419022,   0.0433397,   0.0448266,   0.0463644,   0.0479551,
        0.0496002,   0.0513019,   0.0530619,   0.0548823,   0.0567651,
        0.0587125,   0.0607267,   0.0628101,   0.0649649,   0.0671936,
        0.0694988,   0.0718831,   0.0743492,   0.0768999,   0.0795381,
        0.0822667,   0.0850891,   0.0880082,   0.0910275,   0.0941503,
        0.0973803,   0.100721,    0.104177,    0.10775,     0.111447,
        0.11527,     0.119225,    0.123315,    0.127546,    0.131921,
        0.136447,    0.141128,    0.14597,     0.150978,    0.156157,
        0.161515,    0.167056,    0.172787,    0.178715,    0.184846,
        0.191187,    0.197746,    0.20453,     0.211547,    0.218804,
        0.226311,    0.234075,    0.242105,    0.250411,    0.259002,
        0.267887,    0.277078,    0.286583,    0.296415,    0.306584,
        0.317102,    0.327981,    0.339233,    0.350871,    0.362908,
        0.375358,    0.388236,    0.401555,    0.415331,    0.429579,
        0.444317,    0.45956,     0.475326,    0.491633,    0.508499,
        0.525944,    0.543988,    0.56265,     0.581953,    0.601918,
        0.622568,    0.643926,    0.666017,    0.688866,    0.712498,
        0.736942,    0.762224,    0.788374,    0.81542,     0.843394,
        0.872329,    0.902255,    0.933209,    0.965224,    0.998338,
        1.03259,     1.06801,     1.10465,     1.14255,     1.18175,
        1.22229,     1.26422,     1.30759,     1.35245,     1.39885,
        1.44684,     1.49648,     1.54782,     1.60092,     1.65584,
        1.71265,     1.7714,      1.83217,     1.89503,     1.96004,
        2.02728,     2.09683,     2.16877,     2.24317,     2.32013,
        2.39972,     2.48205,     2.5672,      2.65527,     2.74637,
        2.84059,     2.93804,     3.03883,     3.14309,     3.25091,
        3.36244,     3.4778,      3.59711,     3.72051,     3.84815,
        3.98017,     4.11672,     4.25795,     4.40403,     4.55511,
        4.71138,     4.87302,     5.04019,     5.21311,     5.39195,
        5.57693,     5.76826,     5.96615,     6.17083,     6.38253,
        6.60149,     6.82797,     7.06222,     7.3045,      7.55509,
        7.81428,     8.08236,     8.35964,     8.64644,     8.94307,
        9.24988,     9.56721,     9.89543,     10.2349,     10.586,
        10.9492,     11.3248,     11.7134,     12.1152,     12.5308,
        12.9607,     13.4054,     13.8653,     14.3409,     14.8329,
        15.3418,     15.8681,     16.4125,     16.9756,     17.558,
        18.1603,     18.7833,     19.4277,     20.0942,     20.7836,
        21.4966,     22.2341,     22.9969,     23.7858,     24.6018,
        25.4459,     26.3188,     27.2217,     28.1556,     29.1215,
        30.1206,     31.154,      32.2227,     33.3282,     34.4716,
        35.6542,     36.8774,     38.1425,     39.4511,     40.8045,
        42.2044,     43.6523,     45.1498,     46.6988,     48.3009,
        49.9579,     51.6718,     53.4445,     55.278,      57.1744,
        59.1359,     61.1647,     63.263,      65.4334,     67.6782,
        70
    };
    ASSERT_EQ(separations.size(), 401);

    EXPECT_EQ(separations.size(), expected_separations.size());
    for (size_t i = 0; i < separations.size(); ++i) {
        EXPECT_TRUE(NearRelative(separations[i], expected_separations[i], 1e-5)
                    << "Mismatch at index " << i);
    }

    auto kings = Fermi::PSF::king(psf.front);
    filecomp(kings, "king_front", 1e-2);
}
